##Create configmap##

apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-configmap
data:
  mongodb-url: "mongodb://mongo/metadata"


##Update env in metadadaservice:##

Kubectl get deployment -o yaml > newdeployment.yml

Vi  newdeployment.yml

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2023-06-03T07:40:18Z"
  generation: 1
  name: metaservice-deployment
  namespace: default
  resourceVersion: "1873"
  uid: 191b0250-cec0-4f5f-ae46-fc62d6e88c35
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: metaservice
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: metaservice
    spec:
      containers:
      - image: luckyganesh/metadata-service:v1-arm
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: metaservice-container
        env:
        - name: MONGODB_URL
          valueFrom:
            configMapKeyRef:
              name: mongo-configmap
              key: mongodb-url
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 3
  conditions:
  - lastTransitionTime: "2023-06-03T07:40:53Z"
    lastUpdateTime: "2023-06-03T07:40:53Z"

kubectl get deployment
Kubectl delete deployment deployment.yml

Kubectl create -f new deployment.yml
